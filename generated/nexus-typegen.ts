/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddFavouriteItem: {
    // input type
    busStopCode: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    roadName: string; // String!
  };
  AddFavourites: {
    // input type
    installationId: string; // String!
    item?: NexusGenInputs['AddFavouriteItem'] | null; // AddFavouriteItem
  };
  DeleteFavourites: {
    // input type
    id: string; // String!
    installationId: string; // String!
  };
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenObjects {
  AddFavouritesResult: {
    // root type
    status: boolean; // Boolean!
  };
  AllBusRoute: {
    // root type
    busStopCode: string; // String!
    direction: number; // Int!
    distance: number; // Float!
    operator: string; // String!
    satFirstBus: string; // String!
    satLastBus: string; // String!
    serviceNo: string; // String!
    stopSequence: number; // Int!
    sunFirstBus: string; // String!
    sunLastBus: string; // String!
    wdFirstBus: string; // String!
    wdLastBus: string; // String!
  };
  AllBusService: {
    // root type
    amOffpeakFreq: string; // String!
    amPeakFreq: string; // String!
    category: string; // String!
    destinationCode: string; // String!
    direction: number; // Int!
    loopDesc?: string | null; // String
    operator: string; // String!
    originCode: string; // String!
    pmOffpeakFreq: string; // String!
    pmPeakFreq: string; // String!
    serviceNo: string; // String!
  };
  AllBusStop: {
    // root type
    busStopCode: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    roadName: string; // String!
  };
  BusArrival: {
    // root type
    busStopCode: string; // String!
    services: NexusGenRootTypes['Services'][]; // [Services!]!
  };
  BusRoute: {
    // root type
    busStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
    busStopCode: string; // String!
    direction: number; // Int!
    distance: number; // Float!
    operator: string; // String!
    satFirstBus: string; // String!
    satLastBus: string; // String!
    serviceNo: string; // String!
    stopSequence: number; // Int!
    sunFirstBus: string; // String!
    sunLastBus: string; // String!
    wdFirstBus: string; // String!
    wdLastBus: string; // String!
  };
  BusService: {
    // root type
    destinationBusStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
    originBusStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
  };
  BusStopCode: {
    // root type
    busStopCode: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    roadName: string; // String!
  };
  DeleteFavouritesByIdResult: {
    // root type
    status: boolean; // Boolean!
  };
  FavouriteItem: {
    // root type
    bus_stop_code: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    road_name: string; // String!
  };
  Favourites: {
    // root type
    createdAt: string; // String!
    id: string; // String!
    installation_id: string; // String!
    item: NexusGenRootTypes['FavouriteItem']; // FavouriteItem!
    updatedAt: string; // String!
  };
  Mutation: {};
  NextBus: {
    // root type
    estimatedArrival: string; // String!
    feature: string; // String!
    latitude: string; // String!
    load: string; // String!
    longitude: string; // String!
    type: string; // String!
  };
  Query: {};
  Services: {
    // root type
    busNumber: string; // String!
    nextBus: NexusGenRootTypes['NextBus'][]; // [NextBus!]!
    operator: string; // String!
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars;

export interface NexusGenFieldTypes {
  AddFavouritesResult: {
    // field return type
    status: boolean; // Boolean!
  };
  AllBusRoute: {
    // field return type
    busStopCode: string; // String!
    direction: number; // Int!
    distance: number; // Float!
    operator: string; // String!
    satFirstBus: string; // String!
    satLastBus: string; // String!
    serviceNo: string; // String!
    stopSequence: number; // Int!
    sunFirstBus: string; // String!
    sunLastBus: string; // String!
    wdFirstBus: string; // String!
    wdLastBus: string; // String!
  };
  AllBusService: {
    // field return type
    amOffpeakFreq: string; // String!
    amPeakFreq: string; // String!
    category: string; // String!
    destinationCode: string; // String!
    direction: number; // Int!
    loopDesc: string | null; // String
    operator: string; // String!
    originCode: string; // String!
    pmOffpeakFreq: string; // String!
    pmPeakFreq: string; // String!
    serviceNo: string; // String!
  };
  AllBusStop: {
    // field return type
    busStopCode: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    roadName: string; // String!
  };
  BusArrival: {
    // field return type
    busStopCode: string; // String!
    services: NexusGenRootTypes['Services'][]; // [Services!]!
  };
  BusRoute: {
    // field return type
    busStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
    busStopCode: string; // String!
    direction: number; // Int!
    distance: number; // Float!
    operator: string; // String!
    satFirstBus: string; // String!
    satLastBus: string; // String!
    serviceNo: string; // String!
    stopSequence: number; // Int!
    sunFirstBus: string; // String!
    sunLastBus: string; // String!
    wdFirstBus: string; // String!
    wdLastBus: string; // String!
  };
  BusService: {
    // field return type
    destinationBusStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
    originBusStop: NexusGenRootTypes['BusStopCode']; // BusStopCode!
  };
  BusStopCode: {
    // field return type
    busStopCode: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    roadName: string; // String!
  };
  DeleteFavouritesByIdResult: {
    // field return type
    status: boolean; // Boolean!
  };
  FavouriteItem: {
    // field return type
    bus_stop_code: string; // String!
    description: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    road_name: string; // String!
  };
  Favourites: {
    // field return type
    createdAt: string; // String!
    id: string; // String!
    installation_id: string; // String!
    item: NexusGenRootTypes['FavouriteItem']; // FavouriteItem!
    updatedAt: string; // String!
  };
  Mutation: {
    // field return type
    addFavourites: NexusGenRootTypes['AddFavouritesResult']; // AddFavouritesResult!
    deleteFavouritesById: NexusGenRootTypes['DeleteFavouritesByIdResult']; // DeleteFavouritesByIdResult!
  };
  NextBus: {
    // field return type
    estimatedArrival: string; // String!
    feature: string; // String!
    latitude: string; // String!
    load: string; // String!
    longitude: string; // String!
    type: string; // String!
  };
  Query: {
    // field return type
    allBusRoute: NexusGenRootTypes['AllBusRoute'][]; // [AllBusRoute!]!
    allBusService: NexusGenRootTypes['AllBusService'][]; // [AllBusService!]!
    allBusStop: NexusGenRootTypes['AllBusStop'][]; // [AllBusStop!]!
    busArrival: NexusGenRootTypes['BusArrival']; // BusArrival!
    busRouteByBusServiceNo: NexusGenRootTypes['BusRoute'][]; // [BusRoute!]!
    busServiceByBusServiceNo: NexusGenRootTypes['BusService']; // BusService!
    busStopByBusStopCode: NexusGenRootTypes['BusStopCode'][]; // [BusStopCode!]!
    busStopByDescription: NexusGenRootTypes['BusStopCode'][]; // [BusStopCode!]!
    busStopByLatLong: NexusGenRootTypes['BusStopCode'][]; // [BusStopCode!]!
    busStopByRoadName: NexusGenRootTypes['BusStopCode'][]; // [BusStopCode!]!
    getFavouritesByInstallationId: NexusGenRootTypes['Favourites'][]; // [Favourites!]!
  };
  Services: {
    // field return type
    busNumber: string; // String!
    nextBus: NexusGenRootTypes['NextBus'][]; // [NextBus!]!
    operator: string; // String!
  };
}

export interface NexusGenFieldTypeNames {
  AddFavouritesResult: {
    // field return type name
    status: 'Boolean';
  };
  AllBusRoute: {
    // field return type name
    busStopCode: 'String';
    direction: 'Int';
    distance: 'Float';
    operator: 'String';
    satFirstBus: 'String';
    satLastBus: 'String';
    serviceNo: 'String';
    stopSequence: 'Int';
    sunFirstBus: 'String';
    sunLastBus: 'String';
    wdFirstBus: 'String';
    wdLastBus: 'String';
  };
  AllBusService: {
    // field return type name
    amOffpeakFreq: 'String';
    amPeakFreq: 'String';
    category: 'String';
    destinationCode: 'String';
    direction: 'Int';
    loopDesc: 'String';
    operator: 'String';
    originCode: 'String';
    pmOffpeakFreq: 'String';
    pmPeakFreq: 'String';
    serviceNo: 'String';
  };
  AllBusStop: {
    // field return type name
    busStopCode: 'String';
    description: 'String';
    latitude: 'Float';
    longitude: 'Float';
    roadName: 'String';
  };
  BusArrival: {
    // field return type name
    busStopCode: 'String';
    services: 'Services';
  };
  BusRoute: {
    // field return type name
    busStop: 'BusStopCode';
    busStopCode: 'String';
    direction: 'Int';
    distance: 'Float';
    operator: 'String';
    satFirstBus: 'String';
    satLastBus: 'String';
    serviceNo: 'String';
    stopSequence: 'Int';
    sunFirstBus: 'String';
    sunLastBus: 'String';
    wdFirstBus: 'String';
    wdLastBus: 'String';
  };
  BusService: {
    // field return type name
    destinationBusStop: 'BusStopCode';
    originBusStop: 'BusStopCode';
  };
  BusStopCode: {
    // field return type name
    busStopCode: 'String';
    description: 'String';
    latitude: 'Float';
    longitude: 'Float';
    roadName: 'String';
  };
  DeleteFavouritesByIdResult: {
    // field return type name
    status: 'Boolean';
  };
  FavouriteItem: {
    // field return type name
    bus_stop_code: 'String';
    description: 'String';
    latitude: 'Float';
    longitude: 'Float';
    road_name: 'String';
  };
  Favourites: {
    // field return type name
    createdAt: 'String';
    id: 'String';
    installation_id: 'String';
    item: 'FavouriteItem';
    updatedAt: 'String';
  };
  Mutation: {
    // field return type name
    addFavourites: 'AddFavouritesResult';
    deleteFavouritesById: 'DeleteFavouritesByIdResult';
  };
  NextBus: {
    // field return type name
    estimatedArrival: 'String';
    feature: 'String';
    latitude: 'String';
    load: 'String';
    longitude: 'String';
    type: 'String';
  };
  Query: {
    // field return type name
    allBusRoute: 'AllBusRoute';
    allBusService: 'AllBusService';
    allBusStop: 'AllBusStop';
    busArrival: 'BusArrival';
    busRouteByBusServiceNo: 'BusRoute';
    busServiceByBusServiceNo: 'BusService';
    busStopByBusStopCode: 'BusStopCode';
    busStopByDescription: 'BusStopCode';
    busStopByLatLong: 'BusStopCode';
    busStopByRoadName: 'BusStopCode';
    getFavouritesByInstallationId: 'Favourites';
  };
  Services: {
    // field return type name
    busNumber: 'String';
    nextBus: 'NextBus';
    operator: 'String';
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    addFavourites: {
      // args
      data: NexusGenInputs['AddFavourites']; // AddFavourites!
    };
    deleteFavouritesById: {
      // args
      data: NexusGenInputs['DeleteFavourites']; // DeleteFavourites!
    };
  };
  Query: {
    busArrival: {
      // args
      busStopCode: string; // String!
    };
    busRouteByBusServiceNo: {
      // args
      busServiceNo: string; // String!
    };
    busServiceByBusServiceNo: {
      // args
      busServiceNo: string; // String!
    };
    busStopByBusStopCode: {
      // args
      busStopCode: string; // String!
    };
    busStopByDescription: {
      // args
      description: string; // String!
    };
    busStopByLatLong: {
      // args
      latitude: number; // Float!
      longitude: number; // Float!
      pageNumber: number; // Int!
    };
    busStopByRoadName: {
      // args
      roadName: string; // String!
    };
    getFavouritesByInstallationId: {
      // args
      installationId: string; // String!
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
